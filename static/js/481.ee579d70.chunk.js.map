{"version":3,"file":"static/js/481.ee579d70.chunk.js","mappings":"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","sources":["api/api..js","webpack://react-homework-template/./src/components/SerchBar/SerchBar.module.css?6de5","components/SerchBar/SerchBar.jsx","pages/Movies.js","webpack://react-homework-template/./src/pages/Pages.module.css?6bb4"],"sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY ='0d289c08cd20965dbf909e0560865242';\n\nexport const searchMovies = async movie => {\n    const { data } = await axios.get(`search/movie?api_key=${API_KEY}&language=en-US&query=${movie}`);\n    return data.results;\n  };\n  \n  export const getMovieDetails = async movieId => {\n    const { data } = await axios.get(`movie/${movieId}$?api_key=${API_KEY}&language=en-US`);\n    return data;\n  };\n  \n  export const fetchTrendingMovies = async () => {\n    const { data } = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return data.results;\n  };\n  \n  export const getMovieCast = async movieId => {\n    const { data } = await axios.get(`movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`);\n    return data.cast;\n  };\n  \n  export const getReviews = async movieId => {\n    const { data } = await axios.get(`movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n    return data.results;\n  };","// extracted by mini-css-extract-plugin\nexport default {\"searchContainer\":\"SerchBar_searchContainer__vdLBG\",\"searchButton\":\"SerchBar_searchButton__wM4Cz\",\"inputStyle\":\"SerchBar_inputStyle__vY34n\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport style from './SerchBar.module.css';\n\nexport default function SearchBar({ onChangeQuery }) {\n  const [search, setSearch] = useState('');\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (search === null) {\n      return;\n    }\n    onChangeQuery(search);\n  };\n\n  const handleInputChange = event => {\n    setSearch(event.target.value.trim());\n  };\n\n  return (\n    <>\n      <form\n        autoComplete=\"off\"\n        className={style.searchContainer}\n        onSubmit={handleSubmit}\n      >\n        <p>Enter you're movie name</p>\n        <input\n          type=\"text\"\n          className={style.inputStyle}\n          value={search}\n          onChange={handleInputChange}\n        />\n        <button className={style.searchButton} type=\"submit\">\n          Search\n        </button>\n      </form>\n    </>\n  );\n}\n\nSearchBar.propTypes = {\n  onChangeQuery: PropTypes.func,\n};","import { useState, useEffect } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { searchMovies } from 'api/api.';\nimport SearchBar from 'components/SerchBar/SerchBar';\nimport style from './Pages.module.css'\n\nexport default function Movies() {\n  const [movieToFind, setMovieToFind] = useSearchParams('');\n  const [moviesList, setMoviesList] = useState([]);\n\n  const location = useLocation();\n  const currentQuery = movieToFind.get('query') ?? '';\n\n  const getSearchMovies = async currentQuery => {\n    try {\n      await searchMovies(currentQuery).then(res => setMoviesList(res));\n    } catch (error) {\n      return;\n    }\n  };\n\n  useEffect(() => {\n    if (currentQuery === '') {\n      return;\n    }\n    getSearchMovies(currentQuery);\n  }, [currentQuery]);\n\n  const onQueryChange = newQuery => {\n    if (newQuery === currentQuery) {\n      return alert('This film already found');\n    }\n    if (newQuery === '') {\n      setMoviesList([]);\n      return;\n    }\n    setMovieToFind({ query: newQuery });\n  };\n\n  return (\n    <>\n      <SearchBar onChangeQuery={onQueryChange} />\n      <div>\n        <div className={style.container}>\n          {moviesList.map(movie => {\n            return (\n              <Link\n                to={`/movies/${movie.id}`}\n                state={{ from: location }}\n                key={movie.id}\n                className={style.movieItem}\n              >\n                <img\n                  src={`https://image.tmdb.org/t/p/w300${movie.poster_path} `}\n                  alt={movie.title}\n                  className={style.image}\n                />\n                <p>\n                  {movie.title ? movie.title : ' No information'}\n                </p>\n              </Link>\n            );\n          })}\n        </div>\n      </div>\n    </>\n  );\n}","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Pages_container__3e+Cn\",\"image\":\"Pages_image__OSbYA\",\"movieItem\":\"Pages_movieItem__SSTLF\",\"detailsContainer\":\"Pages_detailsContainer__jOUyQ\",\"detailsImage\":\"Pages_detailsImage__dJgpJ\",\"button\":\"Pages_button__0aZ9n\",\"buttonContainer\":\"Pages_buttonContainer__CNPFN\"};"],"names":["axios","API_KEY","searchMovies","movie","data","results","getMovieDetails","movieId","fetchTrendingMovies","getMovieCast","cast","getReviews","SearchBar","onChangeQuery","useState","search","setSearch","autoComplete","className","style","onSubmit","event","preventDefault","type","value","onChange","target","trim","Movies","useSearchParams","movieToFind","setMovieToFind","moviesList","setMoviesList","location","useLocation","currentQuery","get","getSearchMovies","then","res","useEffect","newQuery","alert","query","map","to","id","state","from","src","poster_path","alt","title"],"sourceRoot":""}